{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport rootReducer from './reducers';\n\n// Function to load state from local storage\nconst loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('reduxState');\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\n// Function to save state to local storage\nconst saveState = state => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('reduxState', serializedState);\n  } catch (err) {\n    // Handle potential errors\n  }\n};\nconst preloadedState = loadState();\nconst store = configureStore({\n  reducer: rootReducer,\n  preloadedState\n});\n\n// Subscribe to store updates to save state to local storage\nstore.subscribe(() => {\n  saveState(store.getState());\n});\nexport default store;","map":{"version":3,"names":["configureStore","rootReducer","loadState","serializedState","localStorage","getItem","undefined","JSON","parse","err","saveState","state","stringify","setItem","preloadedState","store","reducer","subscribe","getState"],"sources":["/Users/sounakmandal/Documents/React/farmwise_ai copy/src/Redux/store.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport rootReducer from './reducers';\n\n// Function to load state from local storage\nconst loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('reduxState');\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\n// Function to save state to local storage\nconst saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('reduxState', serializedState);\n  } catch (err) {\n    // Handle potential errors\n  }\n};\n\nconst preloadedState = loadState();\n\nconst store = configureStore({\n  reducer: rootReducer,\n  preloadedState,\n});\n\n// Subscribe to store updates to save state to local storage\nstore.subscribe(() => {\n  saveState(store.getState());\n});\n\nexport default store;\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,WAAW,MAAM,YAAY;;AAEpC;AACA,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACtB,IAAI;IACF,MAAMC,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAC1D,IAAIF,eAAe,KAAK,IAAI,EAAE;MAC5B,OAAOG,SAAS;IAClB;IACA,OAAOC,IAAI,CAACC,KAAK,CAACL,eAAe,CAAC;EACpC,CAAC,CAAC,OAAOM,GAAG,EAAE;IACZ,OAAOH,SAAS;EAClB;AACF,CAAC;;AAED;AACA,MAAMI,SAAS,GAAIC,KAAK,IAAK;EAC3B,IAAI;IACF,MAAMR,eAAe,GAAGI,IAAI,CAACK,SAAS,CAACD,KAAK,CAAC;IAC7CP,YAAY,CAACS,OAAO,CAAC,YAAY,EAAEV,eAAe,CAAC;EACrD,CAAC,CAAC,OAAOM,GAAG,EAAE;IACZ;EAAA;AAEJ,CAAC;AAED,MAAMK,cAAc,GAAGZ,SAAS,CAAC,CAAC;AAElC,MAAMa,KAAK,GAAGf,cAAc,CAAC;EAC3BgB,OAAO,EAAEf,WAAW;EACpBa;AACF,CAAC,CAAC;;AAEF;AACAC,KAAK,CAACE,SAAS,CAAC,MAAM;EACpBP,SAAS,CAACK,KAAK,CAACG,QAAQ,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC;AAEF,eAAeH,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}